VISCODE2_ADAS = ith_ADAS_VISCODE2[ith_ADAS_VISCODE2 %in% ith_VISCODE2])
ith_Merged.df = merge(ith_ADAS_Added.df, ith_RID.df, by = "STUDY.DATE", all = T) %>% arrange(NEW_EXAMDATE)
}else{
# Extract ADAS index
ith_selected_Dates_Index = which(ith_ADAS_Dates < ith_Study.Date)
ith_ADAS_Max_Date_Index = ith_selected_Dates_Index[length(ith_selected_Dates_Index)]
if(length(ith_ADAS_Max_Date_Index)==0){
ith_ADAS.DATE = NA
ith_diff.time = NA
}else{
ith_ADAS.DATE = ith_ADAS_Dates[ith_ADAS_Max_Date_Index] %>% as.character
ith_diff.time = difftime(ith_Study.Date, ith_ADAS_Dates[ith_ADAS_Dates_Index]) %>% as.numeric
}
# Selected Scores
ith_ADAS_TOTAL.SCORE_11 = ith_ADAS.df$TOTSCORE[ith_ADAS_Max_Date_Index]
ith_ADAS_TOTAL.SCORE_13 = ith_ADAS.df$TOTAL13[ith_ADAS_Max_Date_Index]
if(length(ith_ADAS_TOTAL.SCORE_11)==0){
ith_ADAS_TOTAL.SCORE_11 = NA
}
if(length(ith_ADAS_TOTAL.SCORE_13)==0){
ith_ADAS_TOTAL.SCORE_13 = NA
}
# combine ADAS
ith_ADAS_Added.df = data.frame(STUDY.DATE = ith_Study.Date %>% as.character(),
ADAS.DATE = ith_ADAS.DATE,
DATES.DIFF = ith_diff.time,
ADAS_11 = ith_ADAS_TOTAL.SCORE_11 %>% as.numeric,
ADAS_13 = ith_ADAS_TOTAL.SCORE_13 %>% as.numeric,
VISCODE2 = ith_VISCODE2,
VISCODE2_ADAS = ith_ADAS_VISCODE2[ith_ADAS_VISCODE2 %in% ith_VISCODE2])
ith_Merged.df = merge(ith_ADAS_Added.df, ith_RID.df, by = "STUDY.DATE", all = T) %>% arrange(NEW_EXAMDATE)
}
return(ith_Merged.df)
}
}) %>% rm_list_null
Merged_ADAS_2.list = lapply(seq_along(Data.list), function(i, ...){
ith_RID.df = Data.list[[i]]
ith_RID.df$NEW_EXAMDATE = ith_RID.df$NEW_EXAMDATE %>% as.Date
ith_Index = which(!is.na(ith_RID.df$STUDY.DATE))
ith_Study.Date_Index = which(!is.na(ith_RID.df$STUDY.DATE))
ith_Study.Date =  ith_RID.df$STUDY.DATE[ith_Study.Date_Index] %>% as.Date()
ith_VISCODE2 = ith_RID.df$VISCODE2[ith_Study.Date_Index]
ith_RID = ith_RID.df$RID %>% na.omit %>% unique %>% as.numeric
if(ith_RID %in% ADAS.df$RID){
ith_ADAS.df = ADAS.df %>% filter(RID == ith_RID)
ith_ADAS_VISCODE2 = ith_ADAS.df$VISCODE2
ith_ADAS_Dates = ith_ADAS.df$USERDATE %>% as.Date()
if(ith_VISCODE2 %in% ith_ADAS_VISCODE2){
ith_ADAS_Selected.df = ith_ADAS.df[which(ith_ADAS_VISCODE2 %in% ith_VISCODE2), ]
# combine ADAS
ith_ADAS_Added.df = data.frame(STUDY.DATE = ith_Study.Date %>% as.character,
ADAS.DATE = ith_ADAS_Selected.df$USERDATE,
DATES.DIFF = difftime(ith_Study.Date, ith_ADAS_Selected.df$USERDATE),
ADAS_11 = ith_ADAS_Selected.df$TOTSCORE %>% as.numeric,
ADAS_13 = ith_ADAS_Selected.df$TOTAL13 %>% as.numeric
VISCODE2_ADAS = ith_ADAS_Selected.df$VISCODE2)
Merged_ADAS_2.list = lapply(seq_along(Data.list), function(i, ...){
ith_RID.df = Data.list[[i]]
ith_RID.df$NEW_EXAMDATE = ith_RID.df$NEW_EXAMDATE %>% as.Date
ith_Index = which(!is.na(ith_RID.df$STUDY.DATE))
ith_Study.Date_Index = which(!is.na(ith_RID.df$STUDY.DATE))
ith_Study.Date =  ith_RID.df$STUDY.DATE[ith_Study.Date_Index] %>% as.Date()
ith_VISCODE2 = ith_RID.df$VISCODE2[ith_Study.Date_Index]
ith_RID = ith_RID.df$RID %>% na.omit %>% unique %>% as.numeric
if(ith_RID %in% ADAS.df$RID){
ith_ADAS.df = ADAS.df %>% filter(RID == ith_RID)
ith_ADAS_VISCODE2 = ith_ADAS.df$VISCODE2
ith_ADAS_Dates = ith_ADAS.df$USERDATE %>% as.Date()
if(ith_VISCODE2 %in% ith_ADAS_VISCODE2){
ith_ADAS_Selected.df = ith_ADAS.df[which(ith_ADAS_VISCODE2 %in% ith_VISCODE2), ]
# combine ADAS
ith_ADAS_Added.df = data.frame(STUDY.DATE = ith_Study.Date %>% as.character,
ADAS.DATE = ith_ADAS_Selected.df$USERDATE,
DATES.DIFF = difftime(ith_Study.Date, ith_ADAS_Selected.df$USERDATE),
ADAS_11 = ith_ADAS_Selected.df$TOTSCORE %>% as.numeric,
ADAS_13 = ith_ADAS_Selected.df$TOTAL13 %>% as.numeric,
VISCODE2_ADAS = ith_ADAS_Selected.df$VISCODE2)
ith_Merged.df = merge(ith_ADAS_Added.df, ith_RID.df, by = "STUDY.DATE", all = T) %>% arrange(NEW_EXAMDATE)
}else{
# Extract ADAS index
ith_selected_Dates_Index = which(ith_ADAS_Dates < ith_Study.Date)
ith_ADAS_Max_Date_Index = ith_selected_Dates_Index[length(ith_selected_Dates_Index)]
if(length(ith_ADAS_Max_Date_Index)==0){
ith_ADAS.DATE = NA
ith_diff.time = NA
}else{
ith_ADAS.DATE = ith_ADAS_Dates[ith_ADAS_Max_Date_Index] %>% as.character
ith_diff.time = difftime(ith_Study.Date, ith_ADAS_Dates[ith_ADAS_Dates_Index]) %>% as.numeric
}
# Selected Scores
ith_ADAS_VISCODE2 = ith_ADAS.df$VISCODE2[ith_ADAS_Max_Date_Index]
ith_ADAS_TOTAL.SCORE_11 = ith_ADAS.df$TOTSCORE[ith_ADAS_Max_Date_Index]
ith_ADAS_TOTAL.SCORE_13 = ith_ADAS.df$TOTAL13[ith_ADAS_Max_Date_Index]
if(length(ith_ADAS_TOTAL.SCORE_11)==0){
ith_ADAS_TOTAL.SCORE_11 = NA
}
if(length(ith_ADAS_TOTAL.SCORE_13)==0){
ith_ADAS_TOTAL.SCORE_13 = NA
}
# combine ADAS
ith_ADAS_Added.df = data.frame(STUDY.DATE = ith_Study.Date %>% as.character(),
ADAS.DATE = ith_ADAS.DATE,
DATES.DIFF = ith_diff.time,
ADAS_11 = ith_ADAS_TOTAL.SCORE_11 %>% as.numeric,
ADAS_13 = ith_ADAS_TOTAL.SCORE_13 %>% as.numeric,
VISCODE2_ADAS = ith_ADAS_VISCODE2)
ith_Merged.df = merge(ith_ADAS_Added.df, ith_RID.df, by = "STUDY.DATE", all = T) %>% arrange(NEW_EXAMDATE)
}
return(ith_Merged.df)
}
}) %>% rm_list_null
Merged_ADAS_2.list = lapply(seq_along(Data.list), function(i, ...){
print(i)
ith_RID.df = Data.list[[i]]
ith_RID.df$NEW_EXAMDATE = ith_RID.df$NEW_EXAMDATE %>% as.Date
ith_Index = which(!is.na(ith_RID.df$STUDY.DATE))
ith_Study.Date_Index = which(!is.na(ith_RID.df$STUDY.DATE))
ith_Study.Date =  ith_RID.df$STUDY.DATE[ith_Study.Date_Index] %>% as.Date()
ith_VISCODE2 = ith_RID.df$VISCODE2[ith_Study.Date_Index]
ith_RID = ith_RID.df$RID %>% na.omit %>% unique %>% as.numeric
if(ith_RID %in% ADAS.df$RID){
ith_ADAS.df = ADAS.df %>% filter(RID == ith_RID)
ith_ADAS_VISCODE2 = ith_ADAS.df$VISCODE2
ith_ADAS_Dates = ith_ADAS.df$USERDATE %>% as.Date()
if(ith_VISCODE2 %in% ith_ADAS_VISCODE2){
ith_ADAS_Selected.df = ith_ADAS.df[which(ith_ADAS_VISCODE2 %in% ith_VISCODE2), ]
# combine ADAS
ith_ADAS_Added.df = data.frame(STUDY.DATE = ith_Study.Date %>% as.character,
ADAS.DATE = ith_ADAS_Selected.df$USERDATE,
DATES.DIFF = difftime(ith_Study.Date, ith_ADAS_Selected.df$USERDATE),
ADAS_11 = ith_ADAS_Selected.df$TOTSCORE %>% as.numeric,
ADAS_13 = ith_ADAS_Selected.df$TOTAL13 %>% as.numeric,
VISCODE2_ADAS = ith_ADAS_Selected.df$VISCODE2)
ith_Merged.df = merge(ith_ADAS_Added.df, ith_RID.df, by = "STUDY.DATE", all = T) %>% arrange(NEW_EXAMDATE)
}else{
# Extract ADAS index
ith_selected_Dates_Index = which(ith_ADAS_Dates < ith_Study.Date)
ith_ADAS_Max_Date_Index = ith_selected_Dates_Index[length(ith_selected_Dates_Index)]
if(length(ith_ADAS_Max_Date_Index)==0){
ith_ADAS.DATE = NA
ith_diff.time = NA
}else{
ith_ADAS.DATE = ith_ADAS_Dates[ith_ADAS_Max_Date_Index] %>% as.character
ith_diff.time = difftime(ith_Study.Date, ith_ADAS_Dates[ith_ADAS_Dates_Index]) %>% as.numeric
}
# Selected Scores
ith_ADAS_VISCODE2 = ith_ADAS.df$VISCODE2[ith_ADAS_Max_Date_Index]
ith_ADAS_TOTAL.SCORE_11 = ith_ADAS.df$TOTSCORE[ith_ADAS_Max_Date_Index]
ith_ADAS_TOTAL.SCORE_13 = ith_ADAS.df$TOTAL13[ith_ADAS_Max_Date_Index]
if(length(ith_ADAS_TOTAL.SCORE_11)==0){
ith_ADAS_TOTAL.SCORE_11 = NA
}
if(length(ith_ADAS_TOTAL.SCORE_13)==0){
ith_ADAS_TOTAL.SCORE_13 = NA
}
# combine ADAS
ith_ADAS_Added.df = data.frame(STUDY.DATE = ith_Study.Date %>% as.character(),
ADAS.DATE = ith_ADAS.DATE,
DATES.DIFF = ith_diff.time,
ADAS_11 = ith_ADAS_TOTAL.SCORE_11 %>% as.numeric,
ADAS_13 = ith_ADAS_TOTAL.SCORE_13 %>% as.numeric,
VISCODE2_ADAS = ith_ADAS_VISCODE2)
ith_Merged.df = merge(ith_ADAS_Added.df, ith_RID.df, by = "STUDY.DATE", all = T) %>% arrange(NEW_EXAMDATE)
}
return(ith_Merged.df)
}
}) %>% rm_list_null
i=282
ith_RID.df = Data.list[[i]]
ith_RID.df$NEW_EXAMDATE = ith_RID.df$NEW_EXAMDATE %>% as.Date
ith_Index = which(!is.na(ith_RID.df$STUDY.DATE))
ith_Study.Date_Index = which(!is.na(ith_RID.df$STUDY.DATE))
ith_Study.Date =  ith_RID.df$STUDY.DATE[ith_Study.Date_Index] %>% as.Date()
ith_VISCODE2 = ith_RID.df$VISCODE2[ith_Study.Date_Index]
ith_RID = ith_RID.df$RID %>% na.omit %>% unique %>% as.numeric
if(ith_RID %in% ADAS.df$RID){
ith_ADAS.df = ADAS.df %>% filter(RID == ith_RID)
ith_ADAS_VISCODE2 = ith_ADAS.df$VISCODE2
ith_ADAS_Dates = ith_ADAS.df$USERDATE %>% as.Date()
if(ith_VISCODE2 %in% ith_ADAS_VISCODE2){
ith_ADAS_Selected.df = ith_ADAS.df[which(ith_ADAS_VISCODE2 %in% ith_VISCODE2), ]
# combine ADAS
ith_ADAS_Added.df = data.frame(STUDY.DATE = ith_Study.Date %>% as.character,
ADAS.DATE = ith_ADAS_Selected.df$USERDATE,
DATES.DIFF = difftime(ith_Study.Date, ith_ADAS_Selected.df$USERDATE),
ADAS_11 = ith_ADAS_Selected.df$TOTSCORE %>% as.numeric,
ADAS_13 = ith_ADAS_Selected.df$TOTAL13 %>% as.numeric,
VISCODE2_ADAS = ith_ADAS_Selected.df$VISCODE2)
ith_Merged.df = merge(ith_ADAS_Added.df, ith_RID.df, by = "STUDY.DATE", all = T) %>% arrange(NEW_EXAMDATE)
}else{
# Extract ADAS index
ith_selected_Dates_Index = which(ith_ADAS_Dates < ith_Study.Date)
ith_ADAS_Max_Date_Index = ith_selected_Dates_Index[length(ith_selected_Dates_Index)]
if(length(ith_ADAS_Max_Date_Index)==0){
ith_ADAS.DATE = NA
ith_diff.time = NA
}else{
ith_ADAS.DATE = ith_ADAS_Dates[ith_ADAS_Max_Date_Index] %>% as.character
ith_diff.time = difftime(ith_Study.Date, ith_ADAS_Dates[ith_ADAS_Dates_Index]) %>% as.numeric
}
# Selected Scores
ith_ADAS_VISCODE2 = ith_ADAS.df$VISCODE2[ith_ADAS_Max_Date_Index]
ith_ADAS_TOTAL.SCORE_11 = ith_ADAS.df$TOTSCORE[ith_ADAS_Max_Date_Index]
ith_ADAS_TOTAL.SCORE_13 = ith_ADAS.df$TOTAL13[ith_ADAS_Max_Date_Index]
if(length(ith_ADAS_TOTAL.SCORE_11)==0){
ith_ADAS_TOTAL.SCORE_11 = NA
}
if(length(ith_ADAS_TOTAL.SCORE_13)==0){
ith_ADAS_TOTAL.SCORE_13 = NA
}
# combine ADAS
ith_ADAS_Added.df = data.frame(STUDY.DATE = ith_Study.Date %>% as.character(),
ADAS.DATE = ith_ADAS.DATE,
DATES.DIFF = ith_diff.time,
ADAS_11 = ith_ADAS_TOTAL.SCORE_11 %>% as.numeric,
ADAS_13 = ith_ADAS_TOTAL.SCORE_13 %>% as.numeric,
VISCODE2_ADAS = ith_ADAS_VISCODE2)
ith_Merged.df = merge(ith_ADAS_Added.df, ith_RID.df, by = "STUDY.DATE", all = T) %>% arrange(NEW_EXAMDATE)
}
return(ith_Merged.df)
}
Merged_ADAS_2.list = lapply(seq_along(Data.list), function(i, ...){
i=282
ith_RID.df = Data.list[[i]]
ith_RID.df$NEW_EXAMDATE = ith_RID.df$NEW_EXAMDATE %>% as.Date
ith_Index = which(!is.na(ith_RID.df$STUDY.DATE))
ith_Study.Date_Index = which(!is.na(ith_RID.df$STUDY.DATE))
ith_Study.Date =  ith_RID.df$STUDY.DATE[ith_Study.Date_Index] %>% as.Date()
ith_VISCODE2 = ith_RID.df$VISCODE2[ith_Study.Date_Index]
ith_RID = ith_RID.df$RID %>% na.omit %>% unique %>% as.numeric
if(ith_RID %in% ADAS.df$RID){
ith_ADAS.df = ADAS.df %>% filter(RID == ith_RID)
ith_ADAS_VISCODE2 = ith_ADAS.df$VISCODE2
ith_ADAS_Dates = ith_ADAS.df$USERDATE %>% as.Date()
if(ith_VISCODE2 %in% ith_ADAS_VISCODE2){
ith_ADAS_Selected.df = ith_ADAS.df[which(ith_ADAS_VISCODE2 %in% ith_VISCODE2), ]
# combine ADAS
ith_ADAS_Added.df = data.frame(STUDY.DATE = ith_Study.Date %>% as.character,
ADAS.DATE = ith_ADAS_Selected.df$USERDATE,
DATES.DIFF = difftime(ith_Study.Date, ith_ADAS_Selected.df$USERDATE),
ADAS_11 = ith_ADAS_Selected.df$TOTSCORE %>% as.numeric,
ADAS_13 = ith_ADAS_Selected.df$TOTAL13 %>% as.numeric,
VISCODE2_ADAS = ith_ADAS_Selected.df$VISCODE2)
ith_Merged.df = merge(ith_ADAS_Added.df, ith_RID.df, by = "STUDY.DATE", all = T) %>% arrange(NEW_EXAMDATE)
}else{
# Extract ADAS index
ith_selected_Dates_Index = which(ith_ADAS_Dates < ith_Study.Date)
ith_ADAS_Max_Date_Index = ith_selected_Dates_Index[length(ith_selected_Dates_Index)]
if(length(ith_ADAS_Max_Date_Index)==0){
ith_ADAS.DATE = NA
ith_diff.time = NA
}else{
ith_ADAS.DATE = ith_ADAS_Dates[ith_ADAS_Max_Date_Index] %>% as.character
ith_diff.time = difftime(ith_Study.Date, ith_ADAS_Dates[ith_ADAS_Dates_Index]) %>% as.numeric
}
# Selected Scores
ith_ADAS_VISCODE2 = ith_ADAS.df$VISCODE2[ith_ADAS_Max_Date_Index]
ith_ADAS_TOTAL.SCORE_11 = ith_ADAS.df$TOTSCORE[ith_ADAS_Max_Date_Index]
ith_ADAS_TOTAL.SCORE_13 = ith_ADAS.df$TOTAL13[ith_ADAS_Max_Date_Index]
if(length(ith_ADAS_TOTAL.SCORE_11)==0){
ith_ADAS_TOTAL.SCORE_11 = NA
}
if(length(ith_ADAS_TOTAL.SCORE_13)==0){
ith_ADAS_TOTAL.SCORE_13 = NA
}
# combine ADAS
ith_ADAS_Added.df = data.frame(STUDY.DATE = ith_Study.Date %>% as.character(),
ADAS.DATE = ith_ADAS.DATE,
DATES.DIFF = ith_diff.time,
ADAS_11 = ith_ADAS_TOTAL.SCORE_11 %>% as.numeric,
ADAS_13 = ith_ADAS_TOTAL.SCORE_13 %>% as.numeric,
VISCODE2_ADAS = ith_ADAS_VISCODE2)
ith_Merged.df = merge(ith_ADAS_Added.df, ith_RID.df, by = "STUDY.DATE", all = T) %>% arrange(NEW_EXAMDATE)
}
return(ith_Merged.df)
}
}) %>% rm_list_null
test_ADAS = lapply(seq_along(Merged_ADAS_2.list), function(i,...){
ith_RID.df = Merged_ADAS_2.list[[i]]
ith_index = which(!is.na(ith_RID.df$STUDY.DATE))
ith_Combined.df = data.frame(ADNIMERGE_ADAS_11 = ith_RID.df$ADNIMERGE___ADAS11[ith_index],
ADAS_11 = ith_RID.df$ADAS_11[ith_index],
ADNIMERGE_ADAS_13 = ith_RID.df$ADNIMERGE___ADAS13[ith_index],
ADAS_13 = ith_RID.df$ADAS_13[ith_index],
DATE.DIFF = ith_RID.df$DATES.DIFF[ith_index])
return(ith_Combined.df)
})
i=282
ith_RID.df = Data.list[[i]]
ith_RID.df$NEW_EXAMDATE = ith_RID.df$NEW_EXAMDATE %>% as.Date
ith_Index = which(!is.na(ith_RID.df$STUDY.DATE))
ith_Study.Date_Index = which(!is.na(ith_RID.df$STUDY.DATE))
ith_Study.Date =  ith_RID.df$STUDY.DATE[ith_Study.Date_Index] %>% as.Date()
ith_VISCODE2 = ith_RID.df$VISCODE2[ith_Study.Date_Index]
ith_RID = ith_RID.df$RID %>% na.omit %>% unique %>% as.numeric
if(ith_RID %in% ADAS.df$RID){
ith_ADAS.df = ADAS.df %>% filter(RID == ith_RID)
ith_ADAS_VISCODE2 = ith_ADAS.df$VISCODE2
ith_ADAS_Dates = ith_ADAS.df$USERDATE %>% as.Date()
if(ith_VISCODE2 %in% ith_ADAS_VISCODE2){
ith_ADAS_Selected.df = ith_ADAS.df[which(ith_ADAS_VISCODE2 %in% ith_VISCODE2), ]
# combine ADAS
ith_ADAS_Added.df = data.frame(STUDY.DATE = ith_Study.Date %>% as.character,
ADAS.DATE = ith_ADAS_Selected.df$USERDATE,
DATES.DIFF = difftime(ith_Study.Date, ith_ADAS_Selected.df$USERDATE),
ADAS_11 = ith_ADAS_Selected.df$TOTSCORE %>% as.numeric,
ADAS_13 = ith_ADAS_Selected.df$TOTAL13 %>% as.numeric,
VISCODE2_ADAS = ith_ADAS_Selected.df$VISCODE2)
ith_Merged.df = merge(ith_ADAS_Added.df, ith_RID.df, by = "STUDY.DATE", all = T) %>% arrange(NEW_EXAMDATE)
}else{
# Extract ADAS index
ith_selected_Dates_Index = which(ith_ADAS_Dates < ith_Study.Date)
ith_ADAS_Max_Date_Index = ith_selected_Dates_Index[length(ith_selected_Dates_Index)]
if(length(ith_ADAS_Max_Date_Index)==0){
ith_ADAS.DATE = NA
ith_diff.time = NA
}else{
ith_ADAS.DATE = ith_ADAS_Dates[ith_ADAS_Max_Date_Index] %>% as.character
ith_diff.time = difftime(ith_Study.Date, ith_ADAS_Dates[ith_ADAS_Dates_Index]) %>% as.numeric
}
# Selected Scores
ith_ADAS_VISCODE2 = ith_ADAS.df$VISCODE2[ith_ADAS_Max_Date_Index]
ith_ADAS_TOTAL.SCORE_11 = ith_ADAS.df$TOTSCORE[ith_ADAS_Max_Date_Index]
ith_ADAS_TOTAL.SCORE_13 = ith_ADAS.df$TOTAL13[ith_ADAS_Max_Date_Index]
if(length(ith_ADAS_TOTAL.SCORE_11)==0){
ith_ADAS_TOTAL.SCORE_11 = NA
}
if(length(ith_ADAS_TOTAL.SCORE_13)==0){
ith_ADAS_TOTAL.SCORE_13 = NA
}
# combine ADAS
ith_ADAS_Added.df = data.frame(STUDY.DATE = ith_Study.Date %>% as.character(),
ADAS.DATE = ith_ADAS.DATE,
DATES.DIFF = ith_diff.time,
ADAS_11 = ith_ADAS_TOTAL.SCORE_11 %>% as.numeric,
ADAS_13 = ith_ADAS_TOTAL.SCORE_13 %>% as.numeric,
VISCODE2_ADAS = ith_ADAS_VISCODE2)
ith_Merged.df = merge(ith_ADAS_Added.df, ith_RID.df, by = "STUDY.DATE", all = T) %>% arrange(NEW_EXAMDATE)
}
return(ith_Merged.df)
}
ith_RID %in% ADAS.df$RID
ith_ADAS.df = ADAS.df %>% filter(RID == ith_RID)
ith_ADAS_VISCODE2 = ith_ADAS.df$VISCODE2
ith_ADAS_Dates = ith_ADAS.df$USERDATE %>% as.Date()
ith_VISCODE2 %in% ith_ADAS_VISCODE2
# Extract ADAS index
ith_selected_Dates_Index = which(ith_ADAS_Dates < ith_Study.Date)
ith_ADAS_Max_Date_Index = ith_selected_Dates_Index[length(ith_selected_Dates_Index)]
if(length(ith_ADAS_Max_Date_Index)==0){
ith_ADAS.DATE = NA
ith_diff.time = NA
}else{
ith_ADAS.DATE = ith_ADAS_Dates[ith_ADAS_Max_Date_Index] %>% as.character
ith_diff.time = difftime(ith_Study.Date, ith_ADAS_Dates[ith_ADAS_Dates_Index]) %>% as.numeric
}
# Selected Scores
ith_ADAS_VISCODE2 = ith_ADAS.df$VISCODE2[ith_ADAS_Max_Date_Index]
ith_ADAS_TOTAL.SCORE_11 = ith_ADAS.df$TOTSCORE[ith_ADAS_Max_Date_Index]
ith_ADAS_TOTAL.SCORE_13 = ith_ADAS.df$TOTAL13[ith_ADAS_Max_Date_Index]
if(length(ith_ADAS_TOTAL.SCORE_11)==0){
ith_ADAS_TOTAL.SCORE_11 = NA
}
if(length(ith_ADAS_TOTAL.SCORE_13)==0){
ith_ADAS_TOTAL.SCORE_13 = NA
}
ith_Study.Date %>% as.character()
ith_ADAS.DATE
ith_diff.time
ith_ADAS_TOTAL.SCORE_11 %>% as.numeric
ith_ADAS_TOTAL.SCORE_13 %>% as.numeric
ith_ADAS_VISCODE2
Merged_ADAS_2.list = lapply(seq_along(Data.list), function(i, ...){
ith_RID.df = Data.list[[i]]
ith_RID.df$NEW_EXAMDATE = ith_RID.df$NEW_EXAMDATE %>% as.Date
ith_Index = which(!is.na(ith_RID.df$STUDY.DATE))
ith_Study.Date_Index = which(!is.na(ith_RID.df$STUDY.DATE))
ith_Study.Date =  ith_RID.df$STUDY.DATE[ith_Study.Date_Index] %>% as.Date()
ith_VISCODE2 = ith_RID.df$VISCODE2[ith_Study.Date_Index]
ith_RID = ith_RID.df$RID %>% na.omit %>% unique %>% as.numeric
if(ith_RID %in% ADAS.df$RID){
ith_ADAS.df = ADAS.df %>% filter(RID == ith_RID)
ith_ADAS_VISCODE2 = ith_ADAS.df$VISCODE2
ith_ADAS_Dates = ith_ADAS.df$USERDATE %>% as.Date()
if(ith_VISCODE2 %in% ith_ADAS_VISCODE2){
ith_ADAS_Selected.df = ith_ADAS.df[which(ith_ADAS_VISCODE2 %in% ith_VISCODE2), ]
# combine ADAS
ith_ADAS_Added.df = data.frame(STUDY.DATE = ith_Study.Date %>% as.character,
ADAS.DATE = ith_ADAS_Selected.df$USERDATE,
DATES.DIFF = difftime(ith_Study.Date, ith_ADAS_Selected.df$USERDATE),
ADAS_11 = ith_ADAS_Selected.df$TOTSCORE %>% as.numeric,
ADAS_13 = ith_ADAS_Selected.df$TOTAL13 %>% as.numeric,
VISCODE2_ADAS = ith_ADAS_Selected.df$VISCODE2)
ith_Merged.df = merge(ith_ADAS_Added.df, ith_RID.df, by = "STUDY.DATE", all = T) %>% arrange(NEW_EXAMDATE)
}else{
# Extract ADAS index
ith_selected_Dates_Index = which(ith_ADAS_Dates < ith_Study.Date)
ith_ADAS_Max_Date_Index = ith_selected_Dates_Index[length(ith_selected_Dates_Index)]
if(length(ith_ADAS_Max_Date_Index)==0){
ith_ADAS.DATE = NA
ith_diff.time = NA
}else{
ith_ADAS.DATE = ith_ADAS_Dates[ith_ADAS_Max_Date_Index] %>% as.character
ith_diff.time = difftime(ith_Study.Date, ith_ADAS_Dates[ith_ADAS_Dates_Index]) %>% as.numeric
}
# Selected Scores
ith_ADAS_VISCODE2 = ith_ADAS.df$VISCODE2[ith_ADAS_Max_Date_Index]
ith_ADAS_TOTAL.SCORE_11 = ith_ADAS.df$TOTSCORE[ith_ADAS_Max_Date_Index]
ith_ADAS_TOTAL.SCORE_13 = ith_ADAS.df$TOTAL13[ith_ADAS_Max_Date_Index]
if(length(ith_ADAS_TOTAL.SCORE_11)==0){
ith_ADAS_TOTAL.SCORE_11 = NA
}
if(length(ith_ADAS_TOTAL.SCORE_13)==0){
ith_ADAS_TOTAL.SCORE_13 = NA
}
if(length(ith_ADAS_VISCODE2)==0){
ith_ADAS_VISCODE2 = NA
}
# combine ADAS
ith_ADAS_Added.df = data.frame(STUDY.DATE = ith_Study.Date %>% as.character(),
ADAS.DATE = ith_ADAS.DATE,
DATES.DIFF = ith_diff.time,
ADAS_11 = ith_ADAS_TOTAL.SCORE_11 %>% as.numeric,
ADAS_13 = ith_ADAS_TOTAL.SCORE_13 %>% as.numeric,
VISCODE2_ADAS = ith_ADAS_VISCODE2)
ith_Merged.df = merge(ith_ADAS_Added.df, ith_RID.df, by = "STUDY.DATE", all = T) %>% arrange(NEW_EXAMDATE)
}
return(ith_Merged.df)
}
}) %>% rm_list_null
ith_RID.df = Merged_ADAS_2.list[[i]]
ith_index = which(!is.na(ith_RID.df$STUDY.DATE))
test_ADAS = lapply(seq_along(Merged_ADAS_2.list), function(i,...){
ith_RID.df = Merged_ADAS_2.list[[i]]
ith_index = which(!is.na(ith_RID.df$STUDY.DATE))
ith_Combined.df = data.frame(ADNIMERGE_ADAS_11 = ith_RID.df$ADNIMERGE___ADAS11[ith_index],
ADAS_11 = ith_RID.df$ADAS_11[ith_index],
ADNIMERGE_ADAS_13 = ith_RID.df$ADNIMERGE___ADAS13[ith_index],
ADAS_13 = ith_RID.df$ADAS_13[ith_index],
DATE.DIFF = ith_RID.df$DATES.DIFF[ith_index],
VISCDE2 = ith_RID.df$VISCODE2[ith_index],
VISCDE2_ADAS = ith_RID.df$VISCODE2_ADAS[ith_index])
return(ith_Combined.df)
})
test_combiend = do.call(rbind, test_ADAS)
View(test_Combined)
test_combiend = do.call(rbind, test_ADAS)
View(test_combined)
test_combiend = do.call(rbind, test_ADAS)
test_combiend
test_combined = do.call(rbind, test_ADAS)
View(test_combined)
index = sapply(Merged_ADAS_2.list, function(ith_RID.df,...){
ith_index = which(!is.na(ith_RID.df$STUDY.DATE))
if(!is.na(ith_RID.df$ADAS_11[ith_index]) &&  ith_RID.df$EPI___SLICE.BAND.TYPE[ith_index] == "SB"){
return(1)
}else{
return(0)
}
}) %>% rm_list_null()
combined_SB = do.call(rbind, test_ADAS_SB)[index]
combined_SB %>% View
test_ADAS = lapply(seq_along(Merged_ADAS_2.list), function(i,...){
ith_RID.df = Merged_ADAS_2.list[[i]]
ith_index = which(!is.na(ith_RID.df$STUDY.DATE))
ith_Combined.df = data.frame(ADNIMERGE_ADAS_11 = ith_RID.df$ADNIMERGE___ADAS11[ith_index],
ADAS_11 = ith_RID.df$ADAS_11[ith_index],
ADNIMERGE_ADAS_13 = ith_RID.df$ADNIMERGE___ADAS13[ith_index],
ADAS_13 = ith_RID.df$ADAS_13[ith_index],
DATE.DIFF = ith_RID.df$DATES.DIFF[ith_index],
VISCDE2 = ith_RID.df$VISCODE2[ith_index],
VISCDE2_ADAS = ith_RID.df$VISCODE2_ADAS[ith_index])
return(ith_Combined.df)
})
index = sapply(Merged_ADAS_2.list, function(ith_RID.df,...){
ith_index = which(!is.na(ith_RID.df$STUDY.DATE))
if(!is.na(ith_RID.df$ADAS_11[ith_index]) &&  ith_RID.df$EPI___SLICE.BAND.TYPE[ith_index] == "SB"){
return(1)
}else{
return(0)
}
}) %>% rm_list_null()
combined_SB = do.call(rbind, test_ADAS)[index]
combined_SB %>% View
index
Merged_ADAS_2.list[[1]]
index = sapply(Merged_ADAS_2.list, function(ith_RID.df,...){
ith_index = which(!is.na(ith_RID.df$STUDY.DATE))
if(!is.na(ith_RID.df$ADAS_11[ith_index]) &&  ith_RID.df$EPI___SLICE.BAND.TYPE[ith_index] == "SB"){
return(1)
}else{
return(0)
}
}) %>% rm_list_null()
combined_SB = do.call(rbind, test_ADAS)[index]
combined_SB %>% View
combined_SB = do.call(rbind, test_ADAS)[index,]
combined_SB %>% View
combined_SB = do.call(rbind, test_ADAS)[which(index==1),]
combined_SB %>% View
combined_SB %>% dim
combined_SB = do.call(rbind, test_ADAS)
index
combined_SB[index==1,]
SB.df = combined_SB[index==1,]
dim(SB.df)
SB.df$ADAS_11 %>% is.na
hist(SB.df$DATE.DIFF %>% abs)
hist(SB.df$DATE.DIFF %>% abs)
hist(SB.df$DATE.DIFF %>% as.numeric %>% abs)
dim(SB.df)
View(combined_SB)
